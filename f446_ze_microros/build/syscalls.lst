ARM GAS  /tmp/ccA5FuXH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initialise_monitor_handles,"ax",%progbits
  20              		.align	1
  21              		.global	initialise_monitor_handles
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Src/syscalls.c"
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c **** *****************************************************************************
   3:Src/syscalls.c **** **
   4:Src/syscalls.c **** **  File        : syscalls.c
   5:Src/syscalls.c **** **
   6:Src/syscalls.c **** **  Author        : Auto-generated by System workbench for STM32
   7:Src/syscalls.c **** **
   8:Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Src/syscalls.c **** **
  10:Src/syscalls.c **** **                   For more information about which c-functions
  11:Src/syscalls.c **** **                need which of these lowlevel functions
  12:Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Src/syscalls.c **** **
  14:Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Src/syscalls.c **** **
  16:Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Src/syscalls.c **** **                of any kind.
  18:Src/syscalls.c **** **
  19:Src/syscalls.c **** *****************************************************************************
  20:Src/syscalls.c **** ** @attention
  21:Src/syscalls.c **** **
  22:Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Src/syscalls.c **** **
  24:Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Src/syscalls.c **** **      and/or other materials provided with the distribution.
ARM GAS  /tmp/ccA5FuXH.s 			page 2


  31:Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  33:Src/syscalls.c **** **      without specific prior written permission.
  34:Src/syscalls.c **** **
  35:Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/syscalls.c **** **
  46:Src/syscalls.c **** *****************************************************************************
  47:Src/syscalls.c **** */
  48:Src/syscalls.c **** 
  49:Src/syscalls.c **** // the code was modified by Fynn Boyer
  50:Src/syscalls.c **** 
  51:Src/syscalls.c **** /* Includes */
  52:Src/syscalls.c **** #include <sys/stat.h>
  53:Src/syscalls.c **** #include <stdlib.h>
  54:Src/syscalls.c **** #include <errno.h>
  55:Src/syscalls.c **** #include <stdio.h>
  56:Src/syscalls.c **** #include <signal.h>
  57:Src/syscalls.c **** #include <time.h>
  58:Src/syscalls.c **** #include <sys/time.h>
  59:Src/syscalls.c **** #include <sys/times.h>
  60:Src/syscalls.c **** 
  61:Src/syscalls.c **** 
  62:Src/syscalls.c **** /* Variables */
  63:Src/syscalls.c **** //#undef errno
  64:Src/syscalls.c **** extern int errno;
  65:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  66:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  67:Src/syscalls.c **** 
  68:Src/syscalls.c **** register char * stack_ptr asm("sp");
  69:Src/syscalls.c **** 
  70:Src/syscalls.c **** char *__env[1] = { 0 };
  71:Src/syscalls.c **** char **environ = __env;
  72:Src/syscalls.c **** 
  73:Src/syscalls.c **** extern char _estack;  // see ld file
  74:Src/syscalls.c **** extern char _Min_Stack_Size;  // see ld file
  75:Src/syscalls.c **** 
  76:Src/syscalls.c **** /* Functions */
  77:Src/syscalls.c **** void initialise_monitor_handles()
  78:Src/syscalls.c **** {
  29              		.loc 1 78 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  79:Src/syscalls.c **** }
  34              		.loc 1 79 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/ccA5FuXH.s 			page 3


  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
  40              		.align	1
  41              		.global	_getpid
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	_getpid:
  47              	.LFB26:
  80:Src/syscalls.c **** 
  81:Src/syscalls.c **** int _getpid(void)
  82:Src/syscalls.c **** {
  48              		.loc 1 82 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  83:Src/syscalls.c ****     return 1;
  53              		.loc 1 83 5 view .LVU3
  84:Src/syscalls.c **** }
  54              		.loc 1 84 1 is_stmt 0 view .LVU4
  55 0000 0120     		movs	r0, #1
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE26:
  60              		.section	.text._kill,"ax",%progbits
  61              		.align	1
  62              		.global	_kill
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	_kill:
  68              	.LVL0:
  69              	.LFB27:
  85:Src/syscalls.c **** 
  86:Src/syscalls.c **** int _kill(int pid, int sig)
  87:Src/syscalls.c **** {
  70              		.loc 1 87 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		.loc 1 87 1 is_stmt 0 view .LVU6
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  88:Src/syscalls.c ****     errno = EINVAL;
  80              		.loc 1 88 5 is_stmt 1 view .LVU7
  81 0002 FFF7FEFF 		bl	__errno
  82              	.LVL1:
  83              		.loc 1 88 11 is_stmt 0 view .LVU8
  84 0006 1623     		movs	r3, #22
  85 0008 0360     		str	r3, [r0]
  89:Src/syscalls.c ****     return -1;
  86              		.loc 1 89 5 is_stmt 1 view .LVU9
  90:Src/syscalls.c **** }
ARM GAS  /tmp/ccA5FuXH.s 			page 4


  87              		.loc 1 90 1 is_stmt 0 view .LVU10
  88 000a 4FF0FF30 		mov	r0, #-1
  89 000e 08BD     		pop	{r3, pc}
  90              		.cfi_endproc
  91              	.LFE27:
  93              		.section	.text._exit,"ax",%progbits
  94              		.align	1
  95              		.global	_exit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_exit:
 101              	.LVL2:
 102              	.LFB28:
  91:Src/syscalls.c **** 
  92:Src/syscalls.c **** void _exit (int status)
  93:Src/syscalls.c **** {
 103              		.loc 1 93 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 93 1 is_stmt 0 view .LVU12
 109 0000 08B5     		push	{r3, lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 3, -8
 113              		.cfi_offset 14, -4
  94:Src/syscalls.c ****     _kill(status, -1);
 114              		.loc 1 94 5 is_stmt 1 view .LVU13
 115 0002 4FF0FF31 		mov	r1, #-1
 116 0006 FFF7FEFF 		bl	_kill
 117              	.LVL3:
 118              	.L6:
  95:Src/syscalls.c ****     while (1) {}        /* Make sure we hang here */
 119              		.loc 1 95 5 discriminator 1 view .LVU14
 120              		.loc 1 95 16 discriminator 1 view .LVU15
 121              		.loc 1 95 11 discriminator 1 view .LVU16
 122 000a FEE7     		b	.L6
 123              		.cfi_endproc
 124              	.LFE28:
 126              		.section	.text._read,"ax",%progbits
 127              		.align	1
 128              		.weak	_read
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	_read:
 134              	.LVL4:
 135              	.LFB29:
  96:Src/syscalls.c **** }
  97:Src/syscalls.c **** 
  98:Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  99:Src/syscalls.c **** {
 136              		.loc 1 99 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccA5FuXH.s 			page 5


 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 99 1 is_stmt 0 view .LVU18
 141 0000 70B5     		push	{r4, r5, r6, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 16
 144              		.cfi_offset 4, -16
 145              		.cfi_offset 5, -12
 146              		.cfi_offset 6, -8
 147              		.cfi_offset 14, -4
 148 0002 0C46     		mov	r4, r1
 149 0004 1646     		mov	r6, r2
 100:Src/syscalls.c ****     int DataIdx;
 150              		.loc 1 100 5 is_stmt 1 view .LVU19
 101:Src/syscalls.c **** 
 102:Src/syscalls.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 151              		.loc 1 102 5 view .LVU20
 152              	.LVL5:
 153              		.loc 1 102 18 is_stmt 0 view .LVU21
 154 0006 0025     		movs	r5, #0
 155              		.loc 1 102 5 view .LVU22
 156 0008 06E0     		b	.L9
 157              	.LVL6:
 158              	.L10:
 103:Src/syscalls.c ****     {
 104:Src/syscalls.c ****         *ptr++ = __io_getchar();
 159              		.loc 1 104 9 is_stmt 1 discriminator 3 view .LVU23
 160              		.loc 1 104 18 is_stmt 0 discriminator 3 view .LVU24
 161 000a FFF7FEFF 		bl	__io_getchar
 162              	.LVL7:
 163              		.loc 1 104 13 discriminator 3 view .LVU25
 164 000e 2146     		mov	r1, r4
 165              	.LVL8:
 166              		.loc 1 104 16 discriminator 3 view .LVU26
 167 0010 01F8010B 		strb	r0, [r1], #1
 168              	.LVL9:
 102:Src/syscalls.c ****     {
 169              		.loc 1 102 38 is_stmt 1 discriminator 3 view .LVU27
 102:Src/syscalls.c ****     {
 170              		.loc 1 102 45 is_stmt 0 discriminator 3 view .LVU28
 171 0014 0135     		adds	r5, r5, #1
 172              	.LVL10:
 173              		.loc 1 104 13 discriminator 3 view .LVU29
 174 0016 0C46     		mov	r4, r1
 175              	.LVL11:
 176              	.L9:
 102:Src/syscalls.c ****     {
 177              		.loc 1 102 23 is_stmt 1 discriminator 1 view .LVU30
 102:Src/syscalls.c ****     {
 178              		.loc 1 102 5 is_stmt 0 discriminator 1 view .LVU31
 179 0018 B542     		cmp	r5, r6
 180 001a F6DB     		blt	.L10
 105:Src/syscalls.c ****     }
 106:Src/syscalls.c **** 
 107:Src/syscalls.c **** return len;
 181              		.loc 1 107 1 is_stmt 1 view .LVU32
 108:Src/syscalls.c **** }
 182              		.loc 1 108 1 is_stmt 0 view .LVU33
ARM GAS  /tmp/ccA5FuXH.s 			page 6


 183 001c 3046     		mov	r0, r6
 184 001e 70BD     		pop	{r4, r5, r6, pc}
 185              		.loc 1 108 1 view .LVU34
 186              		.cfi_endproc
 187              	.LFE29:
 189              		.section	.text._write,"ax",%progbits
 190              		.align	1
 191              		.weak	_write
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	_write:
 197              	.LVL12:
 198              	.LFB30:
 109:Src/syscalls.c **** 
 110:Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 111:Src/syscalls.c **** {
 199              		.loc 1 111 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 111 1 is_stmt 0 view .LVU36
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI3:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 0C46     		mov	r4, r1
 212 0004 1646     		mov	r6, r2
 112:Src/syscalls.c ****     int DataIdx;
 213              		.loc 1 112 5 is_stmt 1 view .LVU37
 113:Src/syscalls.c **** 
 114:Src/syscalls.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 214              		.loc 1 114 5 view .LVU38
 215              	.LVL13:
 216              		.loc 1 114 18 is_stmt 0 view .LVU39
 217 0006 0025     		movs	r5, #0
 218              		.loc 1 114 5 view .LVU40
 219 0008 04E0     		b	.L13
 220              	.LVL14:
 221              	.L14:
 115:Src/syscalls.c ****     {
 116:Src/syscalls.c ****         __io_putchar(*ptr++);
 222              		.loc 1 116 9 is_stmt 1 discriminator 3 view .LVU41
 223              		.loc 1 116 9 is_stmt 0 discriminator 3 view .LVU42
 224 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 225              	.LVL15:
 226              		.loc 1 116 9 discriminator 3 view .LVU43
 227 000e FFF7FEFF 		bl	__io_putchar
 228              	.LVL16:
 114:Src/syscalls.c ****     {
 229              		.loc 1 114 38 is_stmt 1 discriminator 3 view .LVU44
 114:Src/syscalls.c ****     {
 230              		.loc 1 114 45 is_stmt 0 discriminator 3 view .LVU45
 231 0012 0135     		adds	r5, r5, #1
ARM GAS  /tmp/ccA5FuXH.s 			page 7


 232              	.LVL17:
 233              	.L13:
 114:Src/syscalls.c ****     {
 234              		.loc 1 114 23 is_stmt 1 discriminator 1 view .LVU46
 114:Src/syscalls.c ****     {
 235              		.loc 1 114 5 is_stmt 0 discriminator 1 view .LVU47
 236 0014 B542     		cmp	r5, r6
 237 0016 F8DB     		blt	.L14
 117:Src/syscalls.c ****     }
 118:Src/syscalls.c ****     return len;
 238              		.loc 1 118 5 is_stmt 1 view .LVU48
 119:Src/syscalls.c **** }
 239              		.loc 1 119 1 is_stmt 0 view .LVU49
 240 0018 3046     		mov	r0, r6
 241 001a 70BD     		pop	{r4, r5, r6, pc}
 242              		.loc 1 119 1 view .LVU50
 243              		.cfi_endproc
 244              	.LFE30:
 246              		.section	.text._sbrk,"ax",%progbits
 247              		.align	1
 248              		.global	_sbrk
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	_sbrk:
 254              	.LVL18:
 255              	.LFB31:
 120:Src/syscalls.c **** 
 121:Src/syscalls.c **** caddr_t _sbrk(int incr) {
 256              		.loc 1 121 25 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 121 25 is_stmt 0 view .LVU52
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 266 0002 0346     		mov	r3, r0
 122:Src/syscalls.c ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 267              		.loc 1 122 5 is_stmt 1 view .LVU53
 123:Src/syscalls.c ****     static char *heap_end;
 268              		.loc 1 123 5 view .LVU54
 124:Src/syscalls.c ****     char *prev_heap_end;
 269              		.loc 1 124 5 view .LVU55
 125:Src/syscalls.c **** 
 126:Src/syscalls.c ****     if (heap_end == NULL) heap_end = &__heap_start__;
 270              		.loc 1 126 5 view .LVU56
 271              		.loc 1 126 18 is_stmt 0 view .LVU57
 272 0004 0D4A     		ldr	r2, .L23
 273 0006 1268     		ldr	r2, [r2]
 274              		.loc 1 126 8 view .LVU58
 275 0008 5AB1     		cbz	r2, .L21
 276              	.L17:
 127:Src/syscalls.c **** 
 128:Src/syscalls.c ****     prev_heap_end = heap_end;
ARM GAS  /tmp/ccA5FuXH.s 			page 8


 277              		.loc 1 128 5 is_stmt 1 view .LVU59
 278              		.loc 1 128 19 is_stmt 0 view .LVU60
 279 000a 0C4A     		ldr	r2, .L23
 280 000c 1068     		ldr	r0, [r2]
 281              	.LVL19:
 129:Src/syscalls.c **** 
 130:Src/syscalls.c ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 282              		.loc 1 130 5 is_stmt 1 view .LVU61
 283              		.loc 1 130 18 is_stmt 0 view .LVU62
 284 000e 0344     		add	r3, r3, r0
 285              	.LVL20:
 286              		.loc 1 130 36 view .LVU63
 287 0010 0B4A     		ldr	r2, .L23+4
 288 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 289 0014 0B4A     		ldr	r2, .L23+8
 290 0016 521A     		subs	r2, r2, r1
 291              		.loc 1 130 8 view .LVU64
 292 0018 9342     		cmp	r3, r2
 293 001a 06D8     		bhi	.L22
 131:Src/syscalls.c ****             __asm("BKPT #0\n");
 132:Src/syscalls.c ****         errno = ENOMEM;
 133:Src/syscalls.c ****         return (caddr_t)-1;
 134:Src/syscalls.c **** 
 135:Src/syscalls.c ****     }
 136:Src/syscalls.c **** 
 137:Src/syscalls.c ****     heap_end += incr;
 294              		.loc 1 137 5 is_stmt 1 view .LVU65
 295              		.loc 1 137 14 is_stmt 0 view .LVU66
 296 001c 074A     		ldr	r2, .L23
 297 001e 1360     		str	r3, [r2]
 138:Src/syscalls.c ****     return (caddr_t)prev_heap_end;
 298              		.loc 1 138 5 is_stmt 1 view .LVU67
 299              	.LVL21:
 300              	.L16:
 139:Src/syscalls.c **** 
 140:Src/syscalls.c **** }
 301              		.loc 1 140 1 is_stmt 0 view .LVU68
 302 0020 08BD     		pop	{r3, pc}
 303              	.LVL22:
 304              	.L21:
 126:Src/syscalls.c **** 
 305              		.loc 1 126 27 is_stmt 1 discriminator 1 view .LVU69
 126:Src/syscalls.c **** 
 306              		.loc 1 126 36 is_stmt 0 discriminator 1 view .LVU70
 307 0022 064A     		ldr	r2, .L23
 308 0024 0849     		ldr	r1, .L23+12
 309 0026 1160     		str	r1, [r2]
 310 0028 EFE7     		b	.L17
 311              	.LVL23:
 312              	.L22:
 131:Src/syscalls.c ****         errno = ENOMEM;
 313              		.loc 1 131 13 is_stmt 1 view .LVU71
 314              		.syntax unified
 315              	@ 131 "Src/syscalls.c" 1
 316 002a 00BE     		BKPT #0
 317              	
 318              	@ 0 "" 2
ARM GAS  /tmp/ccA5FuXH.s 			page 9


 132:Src/syscalls.c ****         return (caddr_t)-1;
 319              		.loc 1 132 9 view .LVU72
 320              		.thumb
 321              		.syntax unified
 322 002c FFF7FEFF 		bl	__errno
 323              	.LVL24:
 132:Src/syscalls.c ****         return (caddr_t)-1;
 324              		.loc 1 132 15 is_stmt 0 view .LVU73
 325 0030 0C23     		movs	r3, #12
 326 0032 0360     		str	r3, [r0]
 133:Src/syscalls.c **** 
 327              		.loc 1 133 9 is_stmt 1 view .LVU74
 133:Src/syscalls.c **** 
 328              		.loc 1 133 16 is_stmt 0 view .LVU75
 329 0034 4FF0FF30 		mov	r0, #-1
 330 0038 F2E7     		b	.L16
 331              	.L24:
 332 003a 00BF     		.align	2
 333              	.L23:
 334 003c 00000000 		.word	.LANCHOR0
 335 0040 00000000 		.word	_Min_Stack_Size
 336 0044 00000000 		.word	_estack
 337 0048 00000000 		.word	end
 338              		.cfi_endproc
 339              	.LFE31:
 341              		.section	.text._close,"ax",%progbits
 342              		.align	1
 343              		.global	_close
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	_close:
 349              	.LVL25:
 350              	.LFB32:
 141:Src/syscalls.c **** 
 142:Src/syscalls.c **** int _close(int file)
 143:Src/syscalls.c **** {
 351              		.loc 1 143 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 144:Src/syscalls.c ****     return -1;
 356              		.loc 1 144 5 view .LVU77
 145:Src/syscalls.c **** }
 357              		.loc 1 145 1 is_stmt 0 view .LVU78
 358 0000 4FF0FF30 		mov	r0, #-1
 359              	.LVL26:
 360              		.loc 1 145 1 view .LVU79
 361 0004 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE32:
 365              		.section	.text._fstat,"ax",%progbits
 366              		.align	1
 367              		.global	_fstat
 368              		.syntax unified
 369              		.thumb
ARM GAS  /tmp/ccA5FuXH.s 			page 10


 370              		.thumb_func
 372              	_fstat:
 373              	.LVL27:
 374              	.LFB33:
 146:Src/syscalls.c **** 
 147:Src/syscalls.c **** 
 148:Src/syscalls.c **** int _fstat(int file, struct stat *st)
 149:Src/syscalls.c **** {
 375              		.loc 1 149 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 150:Src/syscalls.c ****     st->st_mode = S_IFCHR;
 380              		.loc 1 150 5 view .LVU81
 381              		.loc 1 150 17 is_stmt 0 view .LVU82
 382 0000 4FF40053 		mov	r3, #8192
 383 0004 4B60     		str	r3, [r1, #4]
 151:Src/syscalls.c ****     return 0;
 384              		.loc 1 151 5 is_stmt 1 view .LVU83
 152:Src/syscalls.c **** }
 385              		.loc 1 152 1 is_stmt 0 view .LVU84
 386 0006 0020     		movs	r0, #0
 387              	.LVL28:
 388              		.loc 1 152 1 view .LVU85
 389 0008 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE33:
 393              		.section	.text._isatty,"ax",%progbits
 394              		.align	1
 395              		.global	_isatty
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	_isatty:
 401              	.LVL29:
 402              	.LFB34:
 153:Src/syscalls.c **** 
 154:Src/syscalls.c **** int _isatty(int file)
 155:Src/syscalls.c **** {
 403              		.loc 1 155 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 156:Src/syscalls.c ****     return 1;
 408              		.loc 1 156 5 view .LVU87
 157:Src/syscalls.c **** }
 409              		.loc 1 157 1 is_stmt 0 view .LVU88
 410 0000 0120     		movs	r0, #1
 411              	.LVL30:
 412              		.loc 1 157 1 view .LVU89
 413 0002 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE34:
 417              		.section	.text._lseek,"ax",%progbits
 418              		.align	1
ARM GAS  /tmp/ccA5FuXH.s 			page 11


 419              		.global	_lseek
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	_lseek:
 425              	.LVL31:
 426              	.LFB35:
 158:Src/syscalls.c **** 
 159:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 160:Src/syscalls.c **** {
 427              		.loc 1 160 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 161:Src/syscalls.c ****     return 0;
 432              		.loc 1 161 5 view .LVU91
 162:Src/syscalls.c **** }
 433              		.loc 1 162 1 is_stmt 0 view .LVU92
 434 0000 0020     		movs	r0, #0
 435              	.LVL32:
 436              		.loc 1 162 1 view .LVU93
 437 0002 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE35:
 441              		.section	.text._open,"ax",%progbits
 442              		.align	1
 443              		.global	_open
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	_open:
 449              	.LVL33:
 450              	.LFB36:
 163:Src/syscalls.c **** 
 164:Src/syscalls.c **** int _open(char *path, int flags, ...)
 165:Src/syscalls.c **** {
 451              		.loc 1 165 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 4, pretend = 12, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 1
 455              		@ link register save eliminated.
 456              		.loc 1 165 1 is_stmt 0 view .LVU95
 457 0000 0EB4     		push	{r1, r2, r3}
 458              	.LCFI5:
 459              		.cfi_def_cfa_offset 12
 460              		.cfi_offset 1, -12
 461              		.cfi_offset 2, -8
 462              		.cfi_offset 3, -4
 166:Src/syscalls.c ****     /* Pretend like we always fail */
 167:Src/syscalls.c ****     return -1;
 463              		.loc 1 167 5 is_stmt 1 view .LVU96
 168:Src/syscalls.c **** }
 464              		.loc 1 168 1 is_stmt 0 view .LVU97
 465 0002 4FF0FF30 		mov	r0, #-1
 466              	.LVL34:
 467              		.loc 1 168 1 view .LVU98
ARM GAS  /tmp/ccA5FuXH.s 			page 12


 468 0006 03B0     		add	sp, sp, #12
 469              	.LCFI6:
 470              		.cfi_restore 3
 471              		.cfi_restore 2
 472              		.cfi_restore 1
 473              		.cfi_def_cfa_offset 0
 474 0008 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE36:
 478              		.section	.text._wait,"ax",%progbits
 479              		.align	1
 480              		.global	_wait
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	_wait:
 486              	.LVL35:
 487              	.LFB37:
 169:Src/syscalls.c **** 
 170:Src/syscalls.c **** int _wait(int *status)
 171:Src/syscalls.c **** {
 488              		.loc 1 171 1 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		.loc 1 171 1 is_stmt 0 view .LVU100
 493 0000 08B5     		push	{r3, lr}
 494              	.LCFI7:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 3, -8
 497              		.cfi_offset 14, -4
 172:Src/syscalls.c ****     errno = ECHILD;
 498              		.loc 1 172 5 is_stmt 1 view .LVU101
 499 0002 FFF7FEFF 		bl	__errno
 500              	.LVL36:
 501              		.loc 1 172 11 is_stmt 0 view .LVU102
 502 0006 0A23     		movs	r3, #10
 503 0008 0360     		str	r3, [r0]
 173:Src/syscalls.c ****     return -1;
 504              		.loc 1 173 5 is_stmt 1 view .LVU103
 174:Src/syscalls.c **** }
 505              		.loc 1 174 1 is_stmt 0 view .LVU104
 506 000a 4FF0FF30 		mov	r0, #-1
 507 000e 08BD     		pop	{r3, pc}
 508              		.cfi_endproc
 509              	.LFE37:
 511              		.section	.text._unlink,"ax",%progbits
 512              		.align	1
 513              		.global	_unlink
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 518              	_unlink:
 519              	.LVL37:
 520              	.LFB38:
 175:Src/syscalls.c **** 
 176:Src/syscalls.c **** int _unlink(char *name)
ARM GAS  /tmp/ccA5FuXH.s 			page 13


 177:Src/syscalls.c **** {
 521              		.loc 1 177 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		.loc 1 177 1 is_stmt 0 view .LVU106
 526 0000 08B5     		push	{r3, lr}
 527              	.LCFI8:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 3, -8
 530              		.cfi_offset 14, -4
 178:Src/syscalls.c ****     errno = ENOENT;
 531              		.loc 1 178 5 is_stmt 1 view .LVU107
 532 0002 FFF7FEFF 		bl	__errno
 533              	.LVL38:
 534              		.loc 1 178 11 is_stmt 0 view .LVU108
 535 0006 0223     		movs	r3, #2
 536 0008 0360     		str	r3, [r0]
 179:Src/syscalls.c ****     return -1;
 537              		.loc 1 179 5 is_stmt 1 view .LVU109
 180:Src/syscalls.c **** }
 538              		.loc 1 180 1 is_stmt 0 view .LVU110
 539 000a 4FF0FF30 		mov	r0, #-1
 540 000e 08BD     		pop	{r3, pc}
 541              		.cfi_endproc
 542              	.LFE38:
 544              		.section	.text._times,"ax",%progbits
 545              		.align	1
 546              		.global	_times
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 551              	_times:
 552              	.LVL39:
 553              	.LFB39:
 181:Src/syscalls.c **** 
 182:Src/syscalls.c **** int _times(struct tms *buf)
 183:Src/syscalls.c **** {
 554              		.loc 1 183 1 is_stmt 1 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 184:Src/syscalls.c ****     return -1;
 559              		.loc 1 184 5 view .LVU112
 185:Src/syscalls.c **** }
 560              		.loc 1 185 1 is_stmt 0 view .LVU113
 561 0000 4FF0FF30 		mov	r0, #-1
 562              	.LVL40:
 563              		.loc 1 185 1 view .LVU114
 564 0004 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE39:
 568              		.section	.text._stat,"ax",%progbits
 569              		.align	1
 570              		.global	_stat
 571              		.syntax unified
ARM GAS  /tmp/ccA5FuXH.s 			page 14


 572              		.thumb
 573              		.thumb_func
 575              	_stat:
 576              	.LVL41:
 577              	.LFB40:
 186:Src/syscalls.c **** 
 187:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 188:Src/syscalls.c **** {
 578              		.loc 1 188 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 189:Src/syscalls.c ****     st->st_mode = S_IFCHR;
 583              		.loc 1 189 5 view .LVU116
 584              		.loc 1 189 17 is_stmt 0 view .LVU117
 585 0000 4FF40053 		mov	r3, #8192
 586 0004 4B60     		str	r3, [r1, #4]
 190:Src/syscalls.c ****     return 0;
 587              		.loc 1 190 5 is_stmt 1 view .LVU118
 191:Src/syscalls.c **** }
 588              		.loc 1 191 1 is_stmt 0 view .LVU119
 589 0006 0020     		movs	r0, #0
 590              	.LVL42:
 591              		.loc 1 191 1 view .LVU120
 592 0008 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE40:
 596              		.section	.text._link,"ax",%progbits
 597              		.align	1
 598              		.global	_link
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 603              	_link:
 604              	.LVL43:
 605              	.LFB41:
 192:Src/syscalls.c **** 
 193:Src/syscalls.c **** int _link(char *old, char *new)
 194:Src/syscalls.c **** {
 606              		.loc 1 194 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		.loc 1 194 1 is_stmt 0 view .LVU122
 611 0000 08B5     		push	{r3, lr}
 612              	.LCFI9:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
 195:Src/syscalls.c ****     errno = EMLINK;
 616              		.loc 1 195 5 is_stmt 1 view .LVU123
 617 0002 FFF7FEFF 		bl	__errno
 618              	.LVL44:
 619              		.loc 1 195 11 is_stmt 0 view .LVU124
 620 0006 1F23     		movs	r3, #31
 621 0008 0360     		str	r3, [r0]
ARM GAS  /tmp/ccA5FuXH.s 			page 15


 196:Src/syscalls.c ****     return -1;
 622              		.loc 1 196 5 is_stmt 1 view .LVU125
 197:Src/syscalls.c **** }
 623              		.loc 1 197 1 is_stmt 0 view .LVU126
 624 000a 4FF0FF30 		mov	r0, #-1
 625 000e 08BD     		pop	{r3, pc}
 626              		.cfi_endproc
 627              	.LFE41:
 629              		.section	.text._fork,"ax",%progbits
 630              		.align	1
 631              		.global	_fork
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	_fork:
 637              	.LFB42:
 198:Src/syscalls.c **** 
 199:Src/syscalls.c **** int _fork(void)
 200:Src/syscalls.c **** {
 638              		.loc 1 200 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI10:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 201:Src/syscalls.c ****     errno = EAGAIN;
 647              		.loc 1 201 5 view .LVU128
 648 0002 FFF7FEFF 		bl	__errno
 649              	.LVL45:
 650              		.loc 1 201 11 is_stmt 0 view .LVU129
 651 0006 0B23     		movs	r3, #11
 652 0008 0360     		str	r3, [r0]
 202:Src/syscalls.c ****     return -1;
 653              		.loc 1 202 5 is_stmt 1 view .LVU130
 203:Src/syscalls.c **** }
 654              		.loc 1 203 1 is_stmt 0 view .LVU131
 655 000a 4FF0FF30 		mov	r0, #-1
 656 000e 08BD     		pop	{r3, pc}
 657              		.cfi_endproc
 658              	.LFE42:
 660              		.section	.text._execve,"ax",%progbits
 661              		.align	1
 662              		.global	_execve
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 667              	_execve:
 668              	.LVL46:
 669              	.LFB43:
 204:Src/syscalls.c **** 
 205:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 206:Src/syscalls.c **** {
 670              		.loc 1 206 1 is_stmt 1 view -0
 671              		.cfi_startproc
ARM GAS  /tmp/ccA5FuXH.s 			page 16


 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		.loc 1 206 1 is_stmt 0 view .LVU133
 675 0000 08B5     		push	{r3, lr}
 676              	.LCFI11:
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 3, -8
 679              		.cfi_offset 14, -4
 207:Src/syscalls.c ****     errno = ENOMEM;
 680              		.loc 1 207 5 is_stmt 1 view .LVU134
 681 0002 FFF7FEFF 		bl	__errno
 682              	.LVL47:
 683              		.loc 1 207 11 is_stmt 0 view .LVU135
 684 0006 0C23     		movs	r3, #12
 685 0008 0360     		str	r3, [r0]
 208:Src/syscalls.c ****     return -1;
 686              		.loc 1 208 5 is_stmt 1 view .LVU136
 209:Src/syscalls.c **** }
 687              		.loc 1 209 1 is_stmt 0 view .LVU137
 688 000a 4FF0FF30 		mov	r0, #-1
 689 000e 08BD     		pop	{r3, pc}
 690              		.cfi_endproc
 691              	.LFE43:
 693              		.global	environ
 694              		.global	__env
 695              		.section	.bss.__env,"aw",%nobits
 696              		.align	2
 699              	__env:
 700 0000 00000000 		.space	4
 701              		.section	.bss.heap_end.0,"aw",%nobits
 702              		.align	2
 703              		.set	.LANCHOR0,. + 0
 706              	heap_end.0:
 707 0000 00000000 		.space	4
 708              		.section	.data.environ,"aw"
 709              		.align	2
 712              	environ:
 713 0000 00000000 		.word	__env
 714              		.weak	__io_putchar
 715              		.weak	__io_getchar
 716              		.text
 717              	.Letext0:
 718              		.file 2 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 719              		.file 3 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 720              		.file 4 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/_timeval.h"
 721              		.file 5 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/_timespec.h"
 722              		.file 6 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/types.h"
 723              		.file 7 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/stat.h"
 724              		.file 8 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/times.h"
 725              		.file 9 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/errno.h"
ARM GAS  /tmp/ccA5FuXH.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccA5FuXH.s:20     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccA5FuXH.s:26     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccA5FuXH.s:40     .text._getpid:0000000000000000 $t
     /tmp/ccA5FuXH.s:46     .text._getpid:0000000000000000 _getpid
     /tmp/ccA5FuXH.s:61     .text._kill:0000000000000000 $t
     /tmp/ccA5FuXH.s:67     .text._kill:0000000000000000 _kill
     /tmp/ccA5FuXH.s:94     .text._exit:0000000000000000 $t
     /tmp/ccA5FuXH.s:100    .text._exit:0000000000000000 _exit
     /tmp/ccA5FuXH.s:127    .text._read:0000000000000000 $t
     /tmp/ccA5FuXH.s:133    .text._read:0000000000000000 _read
     /tmp/ccA5FuXH.s:190    .text._write:0000000000000000 $t
     /tmp/ccA5FuXH.s:196    .text._write:0000000000000000 _write
     /tmp/ccA5FuXH.s:247    .text._sbrk:0000000000000000 $t
     /tmp/ccA5FuXH.s:253    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccA5FuXH.s:334    .text._sbrk:000000000000003c $d
     /tmp/ccA5FuXH.s:342    .text._close:0000000000000000 $t
     /tmp/ccA5FuXH.s:348    .text._close:0000000000000000 _close
     /tmp/ccA5FuXH.s:366    .text._fstat:0000000000000000 $t
     /tmp/ccA5FuXH.s:372    .text._fstat:0000000000000000 _fstat
     /tmp/ccA5FuXH.s:394    .text._isatty:0000000000000000 $t
     /tmp/ccA5FuXH.s:400    .text._isatty:0000000000000000 _isatty
     /tmp/ccA5FuXH.s:418    .text._lseek:0000000000000000 $t
     /tmp/ccA5FuXH.s:424    .text._lseek:0000000000000000 _lseek
     /tmp/ccA5FuXH.s:442    .text._open:0000000000000000 $t
     /tmp/ccA5FuXH.s:448    .text._open:0000000000000000 _open
     /tmp/ccA5FuXH.s:479    .text._wait:0000000000000000 $t
     /tmp/ccA5FuXH.s:485    .text._wait:0000000000000000 _wait
     /tmp/ccA5FuXH.s:512    .text._unlink:0000000000000000 $t
     /tmp/ccA5FuXH.s:518    .text._unlink:0000000000000000 _unlink
     /tmp/ccA5FuXH.s:545    .text._times:0000000000000000 $t
     /tmp/ccA5FuXH.s:551    .text._times:0000000000000000 _times
     /tmp/ccA5FuXH.s:569    .text._stat:0000000000000000 $t
     /tmp/ccA5FuXH.s:575    .text._stat:0000000000000000 _stat
     /tmp/ccA5FuXH.s:597    .text._link:0000000000000000 $t
     /tmp/ccA5FuXH.s:603    .text._link:0000000000000000 _link
     /tmp/ccA5FuXH.s:630    .text._fork:0000000000000000 $t
     /tmp/ccA5FuXH.s:636    .text._fork:0000000000000000 _fork
     /tmp/ccA5FuXH.s:661    .text._execve:0000000000000000 $t
     /tmp/ccA5FuXH.s:667    .text._execve:0000000000000000 _execve
     /tmp/ccA5FuXH.s:712    .data.environ:0000000000000000 environ
     /tmp/ccA5FuXH.s:699    .bss.__env:0000000000000000 __env
     /tmp/ccA5FuXH.s:696    .bss.__env:0000000000000000 $d
     /tmp/ccA5FuXH.s:702    .bss.heap_end.0:0000000000000000 $d
     /tmp/ccA5FuXH.s:706    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/ccA5FuXH.s:709    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
