ARM GAS  /tmp/ccdoz0LG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"microros_allocators.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.microros_allocate,"ax",%progbits
  20              		.align	1
  21              		.global	microros_allocate
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	microros_allocate:
  27              	.LVL0:
  28              	.LFB4:
  29              		.file 1 "micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c"
   1:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
   2:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** #include <unistd.h>
   3:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** #include "cmsis_os.h"
   4:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
   5:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** int absoluteUsedMemory = 0;
   6:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** int usedMemory = 0;
   7:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
   8:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void *pvPortMallocMicroROS( size_t xWantedSize );
   9:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void vPortFreeMicroROS( void *pv );
  10:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void *pvPortReallocMicroROS( void *pv, size_t xWantedSize );
  11:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** size_t getBlockSize( void *pv );
  12:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void *pvPortCallocMicroROS( size_t num, size_t xWantedSize );
  13:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  14:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void * microros_allocate(size_t size, void * state){
  30              		.loc 1 14 52 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 14 52 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40 0002 0346     		mov	r3, r0
  15:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
  41              		.loc 1 15 3 is_stmt 1 view .LVU2
  16:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Alloc %d (prev: %d B)\n",size, xPortGetFreeHeapSize());
  17:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   absoluteUsedMemory += size;
ARM GAS  /tmp/ccdoz0LG.s 			page 2


  42              		.loc 1 17 3 view .LVU3
  43              		.loc 1 17 22 is_stmt 0 view .LVU4
  44 0004 0549     		ldr	r1, .L3
  45              	.LVL1:
  46              		.loc 1 17 22 view .LVU5
  47 0006 0A68     		ldr	r2, [r1]
  48 0008 0244     		add	r2, r2, r0
  49 000a 0A60     		str	r2, [r1]
  18:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   usedMemory += size;
  50              		.loc 1 18 3 is_stmt 1 view .LVU6
  51              		.loc 1 18 14 is_stmt 0 view .LVU7
  52 000c 0449     		ldr	r1, .L3+4
  53 000e 0A68     		ldr	r2, [r1]
  54 0010 1344     		add	r3, r3, r2
  55 0012 0B60     		str	r3, [r1]
  19:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   return pvPortMallocMicroROS(size);
  56              		.loc 1 19 3 is_stmt 1 view .LVU8
  57              		.loc 1 19 10 is_stmt 0 view .LVU9
  58 0014 FFF7FEFF 		bl	pvPortMallocMicroROS
  59              	.LVL2:
  20:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }
  60              		.loc 1 20 1 view .LVU10
  61 0018 08BD     		pop	{r3, pc}
  62              	.L4:
  63 001a 00BF     		.align	2
  64              	.L3:
  65 001c 00000000 		.word	.LANCHOR0
  66 0020 00000000 		.word	.LANCHOR1
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.microros_deallocate,"ax",%progbits
  71              		.align	1
  72              		.global	microros_deallocate
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	microros_deallocate:
  78              	.LVL3:
  79              	.LFB5:
  21:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  22:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void microros_deallocate(void * pointer, void * state){
  80              		.loc 1 22 55 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  23:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
  84              		.loc 1 23 3 view .LVU12
  24:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Free %d (prev: %d B)\n",getBlockSize(pointer), xPortGetFreeHeapSize());
  25:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   if (NULL != pointer){
  85              		.loc 1 25 3 view .LVU13
  86              		.loc 1 25 6 is_stmt 0 view .LVU14
  87 0000 58B1     		cbz	r0, .L8
  22:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
  88              		.loc 1 22 55 view .LVU15
  89 0002 10B5     		push	{r4, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccdoz0LG.s 			page 3


  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
  94 0004 0446     		mov	r4, r0
  26:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     usedMemory -= getBlockSize(pointer);
  95              		.loc 1 26 5 is_stmt 1 view .LVU16
  96              		.loc 1 26 19 is_stmt 0 view .LVU17
  97 0006 FFF7FEFF 		bl	getBlockSize
  98              	.LVL4:
  99              		.loc 1 26 16 view .LVU18
 100 000a 044A     		ldr	r2, .L11
 101 000c 1368     		ldr	r3, [r2]
 102 000e 1B1A     		subs	r3, r3, r0
 103 0010 1360     		str	r3, [r2]
  27:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     vPortFreeMicroROS(pointer);
 104              		.loc 1 27 5 is_stmt 1 view .LVU19
 105 0012 2046     		mov	r0, r4
 106 0014 FFF7FEFF 		bl	vPortFreeMicroROS
 107              	.LVL5:
  28:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   }
  29:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }
 108              		.loc 1 29 1 is_stmt 0 view .LVU20
 109 0018 10BD     		pop	{r4, pc}
 110              	.LVL6:
 111              	.L8:
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 0
 114              		.cfi_restore 4
 115              		.cfi_restore 14
 116              		.loc 1 29 1 view .LVU21
 117 001a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 001c 00000000 		.word	.LANCHOR1
 122              		.cfi_endproc
 123              	.LFE5:
 125              		.section	.text.microros_reallocate,"ax",%progbits
 126              		.align	1
 127              		.global	microros_reallocate
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	microros_reallocate:
 133              	.LVL7:
 134              	.LFB6:
  30:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  31:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void * microros_reallocate(void * pointer, size_t size, void * state){
 135              		.loc 1 31 70 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 31 70 is_stmt 0 view .LVU23
 140 0000 38B5     		push	{r3, r4, r5, lr}
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 16
 143              		.cfi_offset 3, -16
 144              		.cfi_offset 4, -12
ARM GAS  /tmp/ccdoz0LG.s 			page 4


 145              		.cfi_offset 5, -8
 146              		.cfi_offset 14, -4
 147 0002 0C46     		mov	r4, r1
  32:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
 148              		.loc 1 32 3 is_stmt 1 view .LVU24
  33:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Realloc %d -> %d (prev: %d B)\n",getBlockSize(pointer),size, xPortGetFreeHeapSize()
  34:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   absoluteUsedMemory += size;
 149              		.loc 1 34 3 view .LVU25
 150              		.loc 1 34 22 is_stmt 0 view .LVU26
 151 0004 0C4A     		ldr	r2, .L18
 152              	.LVL8:
 153              		.loc 1 34 22 view .LVU27
 154 0006 1368     		ldr	r3, [r2]
 155 0008 0B44     		add	r3, r3, r1
 156 000a 1360     		str	r3, [r2]
  35:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   usedMemory += size;
 157              		.loc 1 35 3 is_stmt 1 view .LVU28
 158              		.loc 1 35 14 is_stmt 0 view .LVU29
 159 000c 0B4A     		ldr	r2, .L18+4
 160 000e 1368     		ldr	r3, [r2]
 161 0010 0B44     		add	r3, r3, r1
 162 0012 1360     		str	r3, [r2]
  36:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   if (NULL == pointer){
 163              		.loc 1 36 3 is_stmt 1 view .LVU30
 164              		.loc 1 36 6 is_stmt 0 view .LVU31
 165 0014 58B1     		cbz	r0, .L17
 166 0016 0546     		mov	r5, r0
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     return pvPortMallocMicroROS(size);
  38:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
  39:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     usedMemory -= getBlockSize(pointer);
 167              		.loc 1 39 5 is_stmt 1 view .LVU32
 168              		.loc 1 39 19 is_stmt 0 view .LVU33
 169 0018 FFF7FEFF 		bl	getBlockSize
 170              	.LVL9:
 171              		.loc 1 39 16 view .LVU34
 172 001c 074A     		ldr	r2, .L18+4
 173 001e 1368     		ldr	r3, [r2]
 174 0020 1B1A     		subs	r3, r3, r0
 175 0022 1360     		str	r3, [r2]
  40:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     return pvPortReallocMicroROS(pointer,size);
 176              		.loc 1 40 5 is_stmt 1 view .LVU35
 177              		.loc 1 40 12 is_stmt 0 view .LVU36
 178 0024 2146     		mov	r1, r4
 179 0026 2846     		mov	r0, r5
 180 0028 FFF7FEFF 		bl	pvPortReallocMicroROS
 181              	.LVL10:
 182              	.L13:
  41:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   }
  42:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }
 183              		.loc 1 42 1 view .LVU37
 184 002c 38BD     		pop	{r3, r4, r5, pc}
 185              	.LVL11:
 186              	.L17:
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 187              		.loc 1 37 5 is_stmt 1 view .LVU38
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 188              		.loc 1 37 12 is_stmt 0 view .LVU39
ARM GAS  /tmp/ccdoz0LG.s 			page 5


 189 002e 0846     		mov	r0, r1
 190              	.LVL12:
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 191              		.loc 1 37 12 view .LVU40
 192 0030 FFF7FEFF 		bl	pvPortMallocMicroROS
 193              	.LVL13:
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 194              		.loc 1 37 12 view .LVU41
 195 0034 FAE7     		b	.L13
 196              	.L19:
 197 0036 00BF     		.align	2
 198              	.L18:
 199 0038 00000000 		.word	.LANCHOR0
 200 003c 00000000 		.word	.LANCHOR1
 201              		.cfi_endproc
 202              	.LFE6:
 204              		.section	.text.microros_zero_allocate,"ax",%progbits
 205              		.align	1
 206              		.global	microros_zero_allocate
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	microros_zero_allocate:
 212              	.LVL14:
 213              	.LFB7:
  43:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  44:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state){
 214              		.loc 1 44 95 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		.loc 1 44 95 is_stmt 0 view .LVU43
 219 0000 10B5     		push	{r4, lr}
 220              	.LCFI4:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
  45:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
 224              		.loc 1 45 3 is_stmt 1 view .LVU44
  46:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Calloc %d x %d = %d -> (prev: %d B)\n",number_of_elements,size_of_element, number_o
  47:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   absoluteUsedMemory += number_of_elements*size_of_element;
 225              		.loc 1 47 3 view .LVU45
 226              		.loc 1 47 43 is_stmt 0 view .LVU46
 227 0002 01FB00F3 		mul	r3, r1, r0
 228              		.loc 1 47 22 view .LVU47
 229 0006 054C     		ldr	r4, .L22
 230 0008 2268     		ldr	r2, [r4]
 231              	.LVL15:
 232              		.loc 1 47 22 view .LVU48
 233 000a 1A44     		add	r2, r2, r3
 234 000c 2260     		str	r2, [r4]
  48:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   usedMemory += number_of_elements*size_of_element;
 235              		.loc 1 48 3 is_stmt 1 view .LVU49
 236              		.loc 1 48 14 is_stmt 0 view .LVU50
 237 000e 044C     		ldr	r4, .L22+4
 238 0010 2268     		ldr	r2, [r4]
 239 0012 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccdoz0LG.s 			page 6


 240 0014 2360     		str	r3, [r4]
  49:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   return pvPortCallocMicroROS(number_of_elements,size_of_element);
 241              		.loc 1 49 3 is_stmt 1 view .LVU51
 242              		.loc 1 49 10 is_stmt 0 view .LVU52
 243 0016 FFF7FEFF 		bl	pvPortCallocMicroROS
 244              	.LVL16:
  50:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }...
 245              		.loc 1 50 1 view .LVU53
 246 001a 10BD     		pop	{r4, pc}
 247              	.L23:
 248              		.align	2
 249              	.L22:
 250 001c 00000000 		.word	.LANCHOR0
 251 0020 00000000 		.word	.LANCHOR1
 252              		.cfi_endproc
 253              	.LFE7:
 255              		.global	usedMemory
 256              		.global	absoluteUsedMemory
 257              		.section	.bss.absoluteUsedMemory,"aw",%nobits
 258              		.align	2
 259              		.set	.LANCHOR0,. + 0
 262              	absoluteUsedMemory:
 263 0000 00000000 		.space	4
 264              		.section	.bss.usedMemory,"aw",%nobits
 265              		.align	2
 266              		.set	.LANCHOR1,. + 0
 269              	usedMemory:
 270 0000 00000000 		.space	4
 271              		.text
 272              	.Letext0:
 273              		.file 2 "/home/kaan/STM32ToolChain/gcc-arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
ARM GAS  /tmp/ccdoz0LG.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 microros_allocators.c
     /tmp/ccdoz0LG.s:20     .text.microros_allocate:0000000000000000 $t
     /tmp/ccdoz0LG.s:26     .text.microros_allocate:0000000000000000 microros_allocate
     /tmp/ccdoz0LG.s:65     .text.microros_allocate:000000000000001c $d
     /tmp/ccdoz0LG.s:71     .text.microros_deallocate:0000000000000000 $t
     /tmp/ccdoz0LG.s:77     .text.microros_deallocate:0000000000000000 microros_deallocate
     /tmp/ccdoz0LG.s:121    .text.microros_deallocate:000000000000001c $d
     /tmp/ccdoz0LG.s:126    .text.microros_reallocate:0000000000000000 $t
     /tmp/ccdoz0LG.s:132    .text.microros_reallocate:0000000000000000 microros_reallocate
     /tmp/ccdoz0LG.s:199    .text.microros_reallocate:0000000000000038 $d
     /tmp/ccdoz0LG.s:205    .text.microros_zero_allocate:0000000000000000 $t
     /tmp/ccdoz0LG.s:211    .text.microros_zero_allocate:0000000000000000 microros_zero_allocate
     /tmp/ccdoz0LG.s:250    .text.microros_zero_allocate:000000000000001c $d
     /tmp/ccdoz0LG.s:269    .bss.usedMemory:0000000000000000 usedMemory
     /tmp/ccdoz0LG.s:262    .bss.absoluteUsedMemory:0000000000000000 absoluteUsedMemory
     /tmp/ccdoz0LG.s:258    .bss.absoluteUsedMemory:0000000000000000 $d
     /tmp/ccdoz0LG.s:265    .bss.usedMemory:0000000000000000 $d

UNDEFINED SYMBOLS
pvPortMallocMicroROS
getBlockSize
vPortFreeMicroROS
pvPortReallocMicroROS
pvPortCallocMicroROS
