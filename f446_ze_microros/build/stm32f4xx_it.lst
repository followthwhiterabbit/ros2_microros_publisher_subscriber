ARM GAS  /tmp/cc5SfmMo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:Src/stm32f4xx_it.c **** #include "task.h"
  26:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f4xx_it.c **** 
  30:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc5SfmMo.s 			page 2


  31:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f4xx_it.c **** 
  35:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f4xx_it.c ****  
  38:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  62:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  63:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart3;
  64:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  67:Src/stm32f4xx_it.c **** 
  68:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  69:Src/stm32f4xx_it.c **** 
  70:Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  72:Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Src/stm32f4xx_it.c **** /**
  74:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Src/stm32f4xx_it.c ****   */
  76:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  77:Src/stm32f4xx_it.c **** {
  29              		.loc 1 77 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  78:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/cc5SfmMo.s 			page 3


  83:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32f4xx_it.c **** }
  34              		.loc 1 84 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE134:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HardFault_Handler:
  47              	.LFB135:
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c **** /**
  87:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32f4xx_it.c ****   */
  89:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32f4xx_it.c **** {
  48              		.loc 1 90 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  91:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32f4xx_it.c **** 
  93:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c ****   while (1)
  55              		.loc 1 94 3 discriminator 1 view .LVU3
  95:Src/stm32f4xx_it.c ****   {
  96:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32f4xx_it.c ****   }
  56              		.loc 1 98 3 discriminator 1 view .LVU4
  94:Src/stm32f4xx_it.c ****   {
  57              		.loc 1 94 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE135:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	MemManage_Handler:
  70              	.LFB136:
  99:Src/stm32f4xx_it.c **** }
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** /**
 102:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 103:Src/stm32f4xx_it.c ****   */
 104:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 105:Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/cc5SfmMo.s 			page 4


  71              		.loc 1 105 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 106:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   while (1)
  78              		.loc 1 109 3 discriminator 1 view .LVU7
 110:Src/stm32f4xx_it.c ****   {
 111:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Src/stm32f4xx_it.c ****   }
  79              		.loc 1 113 3 discriminator 1 view .LVU8
 109:Src/stm32f4xx_it.c ****   {
  80              		.loc 1 109 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE136:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	BusFault_Handler:
  93              	.LFB137:
 114:Src/stm32f4xx_it.c **** }
 115:Src/stm32f4xx_it.c **** 
 116:Src/stm32f4xx_it.c **** /**
 117:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Src/stm32f4xx_it.c ****   */
 119:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 120:Src/stm32f4xx_it.c **** {
  94              		.loc 1 120 1 view -0
  95              		.cfi_startproc
  96              		@ Volatile: function does not return.
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              	.L7:
 121:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c ****   while (1)
 101              		.loc 1 124 3 discriminator 1 view .LVU11
 125:Src/stm32f4xx_it.c ****   {
 126:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Src/stm32f4xx_it.c ****   }
 102              		.loc 1 128 3 discriminator 1 view .LVU12
 124:Src/stm32f4xx_it.c ****   {
 103              		.loc 1 124 9 discriminator 1 view .LVU13
 104 0000 FEE7     		b	.L7
ARM GAS  /tmp/cc5SfmMo.s 			page 5


 105              		.cfi_endproc
 106              	.LFE137:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	UsageFault_Handler:
 116              	.LFB138:
 129:Src/stm32f4xx_it.c **** }
 130:Src/stm32f4xx_it.c **** 
 131:Src/stm32f4xx_it.c **** /**
 132:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Src/stm32f4xx_it.c ****   */
 134:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 135:Src/stm32f4xx_it.c **** {
 117              		.loc 1 135 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.L9:
 136:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Src/stm32f4xx_it.c **** 
 138:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****   while (1)
 124              		.loc 1 139 3 discriminator 1 view .LVU15
 140:Src/stm32f4xx_it.c ****   {
 141:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Src/stm32f4xx_it.c ****   }
 125              		.loc 1 143 3 discriminator 1 view .LVU16
 139:Src/stm32f4xx_it.c ****   {
 126              		.loc 1 139 9 discriminator 1 view .LVU17
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE138:
 131              		.section	.text.DebugMon_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	DebugMon_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	DebugMon_Handler:
 139              	.LFB139:
 144:Src/stm32f4xx_it.c **** }
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c **** /**
 147:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 148:Src/stm32f4xx_it.c ****   */
 149:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 150:Src/stm32f4xx_it.c **** {
 140              		.loc 1 150 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc5SfmMo.s 			page 6


 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 151:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Src/stm32f4xx_it.c **** }
 145              		.loc 1 157 1 view .LVU19
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE139:
 150              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
 151              		.align	1
 152              		.global	DMA1_Stream1_IRQHandler
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	DMA1_Stream1_IRQHandler:
 158              	.LFB140:
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c **** /******************************************************************************/
 160:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 161:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 162:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 163:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 164:Src/stm32f4xx_it.c **** /******************************************************************************/
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c **** /**
 167:Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 168:Src/stm32f4xx_it.c ****   */
 169:Src/stm32f4xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 170:Src/stm32f4xx_it.c **** {
 159              		.loc 1 170 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 08B5     		push	{r3, lr}
 164              	.LCFI0:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 3, -8
 167              		.cfi_offset 14, -4
 171:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 174:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 168              		.loc 1 174 3 view .LVU21
 169 0002 0248     		ldr	r0, .L13
 170 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 171              	.LVL0:
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 172              		.loc 1 178 1 is_stmt 0 view .LVU22
 173 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc5SfmMo.s 			page 7


 174              	.L14:
 175 000a 00BF     		.align	2
 176              	.L13:
 177 000c 00000000 		.word	hdma_usart3_rx
 178              		.cfi_endproc
 179              	.LFE140:
 181              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 182              		.align	1
 183              		.global	DMA1_Stream3_IRQHandler
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	DMA1_Stream3_IRQHandler:
 189              	.LFB141:
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /**
 181:Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 182:Src/stm32f4xx_it.c ****   */
 183:Src/stm32f4xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 184:Src/stm32f4xx_it.c **** {
 190              		.loc 1 184 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              	.LCFI1:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 185:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 188:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_tx);
 199              		.loc 1 188 3 view .LVU24
 200 0002 0248     		ldr	r0, .L17
 201 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 202              	.LVL1:
 189:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 192:Src/stm32f4xx_it.c **** }
 203              		.loc 1 192 1 is_stmt 0 view .LVU25
 204 0008 08BD     		pop	{r3, pc}
 205              	.L18:
 206 000a 00BF     		.align	2
 207              	.L17:
 208 000c 00000000 		.word	hdma_usart3_tx
 209              		.cfi_endproc
 210              	.LFE141:
 212              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 213              		.align	1
 214              		.global	TIM1_UP_TIM10_IRQHandler
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	TIM1_UP_TIM10_IRQHandler:
 220              	.LFB142:
ARM GAS  /tmp/cc5SfmMo.s 			page 8


 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c **** /**
 195:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 196:Src/stm32f4xx_it.c ****   */
 197:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 198:Src/stm32f4xx_it.c **** {
 221              		.loc 1 198 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI2:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 199:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 202:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 230              		.loc 1 202 3 view .LVU27
 231 0002 0248     		ldr	r0, .L21
 232 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 233              	.LVL2:
 203:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 204:Src/stm32f4xx_it.c **** 
 205:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 206:Src/stm32f4xx_it.c **** }
 234              		.loc 1 206 1 is_stmt 0 view .LVU28
 235 0008 08BD     		pop	{r3, pc}
 236              	.L22:
 237 000a 00BF     		.align	2
 238              	.L21:
 239 000c 00000000 		.word	htim1
 240              		.cfi_endproc
 241              	.LFE142:
 243              		.section	.text.USART3_IRQHandler,"ax",%progbits
 244              		.align	1
 245              		.global	USART3_IRQHandler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	USART3_IRQHandler:
 251              	.LFB143:
 207:Src/stm32f4xx_it.c **** 
 208:Src/stm32f4xx_it.c **** /**
 209:Src/stm32f4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 210:Src/stm32f4xx_it.c ****   */
 211:Src/stm32f4xx_it.c **** void USART3_IRQHandler(void)
 212:Src/stm32f4xx_it.c **** {
 252              		.loc 1 212 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI3:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
ARM GAS  /tmp/cc5SfmMo.s 			page 9


 260              		.cfi_offset 14, -4
 213:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 214:Src/stm32f4xx_it.c **** 
 215:Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 216:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 261              		.loc 1 216 3 view .LVU30
 262 0002 0248     		ldr	r0, .L25
 263 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 264              	.LVL3:
 217:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 218:Src/stm32f4xx_it.c **** 
 219:Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 220:Src/stm32f4xx_it.c **** }
 265              		.loc 1 220 1 is_stmt 0 view .LVU31
 266 0008 08BD     		pop	{r3, pc}
 267              	.L26:
 268 000a 00BF     		.align	2
 269              	.L25:
 270 000c 00000000 		.word	huart3
 271              		.cfi_endproc
 272              	.LFE143:
 274              		.text
 275              	.Letext0:
 276              		.file 2 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 277              		.file 3 "/home/kaan/STM32ToolChain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 278              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 279              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 280              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 281              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 282              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/cc5SfmMo.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cc5SfmMo.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc5SfmMo.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc5SfmMo.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc5SfmMo.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc5SfmMo.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc5SfmMo.s:69     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc5SfmMo.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc5SfmMo.s:92     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc5SfmMo.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc5SfmMo.s:115    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc5SfmMo.s:132    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc5SfmMo.s:138    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc5SfmMo.s:151    .text.DMA1_Stream1_IRQHandler:0000000000000000 $t
     /tmp/cc5SfmMo.s:157    .text.DMA1_Stream1_IRQHandler:0000000000000000 DMA1_Stream1_IRQHandler
     /tmp/cc5SfmMo.s:177    .text.DMA1_Stream1_IRQHandler:000000000000000c $d
     /tmp/cc5SfmMo.s:182    .text.DMA1_Stream3_IRQHandler:0000000000000000 $t
     /tmp/cc5SfmMo.s:188    .text.DMA1_Stream3_IRQHandler:0000000000000000 DMA1_Stream3_IRQHandler
     /tmp/cc5SfmMo.s:208    .text.DMA1_Stream3_IRQHandler:000000000000000c $d
     /tmp/cc5SfmMo.s:213    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/cc5SfmMo.s:219    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/cc5SfmMo.s:239    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/cc5SfmMo.s:244    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/cc5SfmMo.s:250    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/cc5SfmMo.s:270    .text.USART3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart3_rx
hdma_usart3_tx
HAL_TIM_IRQHandler
htim1
HAL_UART_IRQHandler
huart3
